//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Mobile.Droid.ExportProductBasketWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExportProductBasket_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket")]
    public partial class ExportProductBasket : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CallExportProductBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProductBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductBasketOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ExportProductBasket() {
            this.Url = "http://localhost:7047/BC140/WS/CRONUS%20International%20Ltd./Codeunit/ExportProdu" +
                "ctBasket";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CallExportProductBasketCompletedEventHandler CallExportProductBasketCompleted;
        
        /// <remarks/>
        public event InsertProductBasketCompletedEventHandler InsertProductBasketCompleted;
        
        /// <remarks/>
        public event DeleteProductBasketCompletedEventHandler DeleteProductBasketCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket:ExportProductBasket", RequestElementName="ExportProductBasket", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket", ResponseElementName="ExportProductBasket_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CallExportProductBasket(ref NavProductBaskets items) {
            object[] results = this.Invoke("CallExportProductBasket", new object[] {
                        items});
            items = ((NavProductBaskets)(results[0]));
        }
        
        /// <remarks/>
        public void CallExportProductBasketAsync(NavProductBaskets items) {
            this.CallExportProductBasketAsync(items, null);
        }
        
        /// <remarks/>
        public void CallExportProductBasketAsync(NavProductBaskets items, object userState) {
            if ((this.CallExportProductBasketOperationCompleted == null)) {
                this.CallExportProductBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallExportProductBasketOperationCompleted);
            }
            this.InvokeAsync("CallExportProductBasket", new object[] {
                        items}, this.CallExportProductBasketOperationCompleted, userState);
        }
        
        private void OnCallExportProductBasketOperationCompleted(object arg) {
            if ((this.CallExportProductBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallExportProductBasketCompleted(this, new CallExportProductBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket:InsertProductBasket", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket", ResponseElementName="InsertProductBasket_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProductBasket(ref int productIDParam, ref int basketIDParam, ref int quantityParam) {
            object[] results = this.Invoke("InsertProductBasket", new object[] {
                        productIDParam,
                        basketIDParam,
                        quantityParam});
            productIDParam = ((int)(results[0]));
            basketIDParam = ((int)(results[1]));
            quantityParam = ((int)(results[2]));
        }
        
        /// <remarks/>
        public void InsertProductBasketAsync(int productIDParam, int basketIDParam, int quantityParam) {
            this.InsertProductBasketAsync(productIDParam, basketIDParam, quantityParam, null);
        }
        
        /// <remarks/>
        public void InsertProductBasketAsync(int productIDParam, int basketIDParam, int quantityParam, object userState) {
            if ((this.InsertProductBasketOperationCompleted == null)) {
                this.InsertProductBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProductBasketOperationCompleted);
            }
            this.InvokeAsync("InsertProductBasket", new object[] {
                        productIDParam,
                        basketIDParam,
                        quantityParam}, this.InsertProductBasketOperationCompleted, userState);
        }
        
        private void OnInsertProductBasketOperationCompleted(object arg) {
            if ((this.InsertProductBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProductBasketCompleted(this, new InsertProductBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket:DeleteProductBasket", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket", ResponseElementName="DeleteProductBasket_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ExportProductBasket", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProductBasket(ref int productIDParam, ref int basketIDParam, ref int quantityParam) {
            object[] results = this.Invoke("DeleteProductBasket", new object[] {
                        productIDParam,
                        basketIDParam,
                        quantityParam});
            productIDParam = ((int)(results[0]));
            basketIDParam = ((int)(results[1]));
            quantityParam = ((int)(results[2]));
        }
        
        /// <remarks/>
        public void DeleteProductBasketAsync(int productIDParam, int basketIDParam, int quantityParam) {
            this.DeleteProductBasketAsync(productIDParam, basketIDParam, quantityParam, null);
        }
        
        /// <remarks/>
        public void DeleteProductBasketAsync(int productIDParam, int basketIDParam, int quantityParam, object userState) {
            if ((this.DeleteProductBasketOperationCompleted == null)) {
                this.DeleteProductBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductBasketOperationCompleted);
            }
            this.InvokeAsync("DeleteProductBasket", new object[] {
                        productIDParam,
                        basketIDParam,
                        quantityParam}, this.DeleteProductBasketOperationCompleted, userState);
        }
        
        private void OnDeleteProductBasketOperationCompleted(object arg) {
            if ((this.DeleteProductBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductBasketCompleted(this, new DeleteProductBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ProductBasketXml")]
    public partial class NavProductBaskets {
        
        private NavProdcuctBasket[] navProdcuctBasketField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavProdcuctBasket")]
        public NavProdcuctBasket[] NavProdcuctBasket {
            get {
                return this.navProdcuctBasketField;
            }
            set {
                this.navProdcuctBasketField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ProductBasketXml")]
    public partial class NavProdcuctBasket {
        
        private int productIDField;
        
        private int basketIDField;
        
        public NavProdcuctBasket() {
            this.productIDField = 0;
            this.basketIDField = 0;
        }
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public int BasketID {
            get {
                return this.basketIDField;
            }
            set {
                this.basketIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CallExportProductBasketCompletedEventHandler(object sender, CallExportProductBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallExportProductBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallExportProductBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NavProductBaskets items {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NavProductBaskets)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertProductBasketCompletedEventHandler(object sender, InsertProductBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProductBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProductBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int productIDParam {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int basketIDParam {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int quantityParam {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteProductBasketCompletedEventHandler(object sender, DeleteProductBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProductBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProductBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int productIDParam {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int basketIDParam {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int quantityParam {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591